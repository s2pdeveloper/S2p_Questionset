{"version":3,"file":"src_app_layout_questions_question_module_ts.12c4b8ebe8489f62.js","mappings":"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","sources":["./src/app/layout/questions/question-form/question-form.component.ts","./src/app/layout/questions/question-list/question-list.component.ts","./src/app/layout/questions/question-routing.module.ts","./src/app/layout/questions/question.module.ts","./src/app/services/questions/questions.service.ts"],"sourcesContent":["import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuestionsService } from '@services/questions/questions.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-question-form',\r\n  templateUrl: './question-form.component.html',\r\n  styleUrls: ['./question-form.component.scss'],\r\n})\r\nexport class QuestionFormComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private questionService: QuestionsService,\r\n    private formBuilder: FormBuilder,\r\n    private actRoutes: ActivatedRoute,\r\n    private location: Location,\r\n    private spinner: NgxSpinnerService,\r\n    private toastService: ToastrService\r\n  ) {}\r\n\r\n  submitted = false;\r\n  optionsList: string[] = [];\r\n  setId: any = null;\r\n  splitArray: [] = [];\r\n  act: string = '';\r\n  questionForm = this.formBuilder.group({\r\n    _id: new FormControl(null),\r\n    question: new FormControl('', [Validators.required]),\r\n    type: new FormControl('', [Validators.required]),\r\n    hint: new FormControl(''),\r\n    options: new FormControl('', [Validators.required]),\r\n    correctOption: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.actRoutes.queryParams.subscribe((params) => {\r\n      this.setId = params.s_id;\r\n      this.act = params.action;\r\n      console.log('set id in form', this.setId);\r\n      if (params.q_id) {\r\n        this.getById(params.q_id);\r\n      }\r\n    });\r\n  }\r\n\r\n  get form() {\r\n    return this.questionForm.controls;\r\n  }\r\n\r\n  onTextChange(ev: any) {\r\n    // console.log(ev.target.value);\r\n\r\n    this.splitArray = ev.target.value.split(',');\r\n    // this.questionForm.get('options')?.setValue(splitArray);\r\n    // console.log(this.splitArray);\r\n  }\r\n\r\n  getById(id) {\r\n    this.questionService.getQuestionById(id).subscribe((success) => {\r\n      console.log(\"get by id\", success);\r\n      // this.splitArray = success?.result[0]?.options[0]?.split(',');\r\n      this.splitArray = success?.result[0]?.options;\r\n\r\n      this.questionForm.patchValue(success?.result[0]);\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.questionForm.invalid) {\r\n      this.toastService.warning('Please fill all required fields!');\r\n      return;\r\n    }\r\n    let formData = this.questionForm.value;\r\n    formData.options = this.splitArray;\r\n\r\n    console.log(formData);\r\n    if (formData._id) {\r\n      this.update(formData);\r\n    } else {\r\n      delete formData.id;\r\n      this.create(formData);\r\n    }\r\n  }\r\n\r\n  create(formData) {\r\n    this.spinner.show();\r\n    this.questionService.createQuestion(formData, this.setId).subscribe(\r\n      (success) => {\r\n        console.log('Created Question', success);\r\n        this.spinner.hide();\r\n        this.toastService.success(success.message);\r\n        this.router.navigate(['questions/questions-list'], {\r\n          queryParams: { id: this.setId },\r\n        });\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.toastService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  update(formData) {\r\n    this.spinner.show();\r\n    this.questionService.updateQuestion(formData, formData._id).subscribe(\r\n      (success) => {\r\n        this.submitted = false;\r\n        this.spinner.hide();\r\n        this.toastService.success(success.message);\r\n        this.router.navigate(['questions/questions-list'], {\r\n          queryParams: { id: this.setId },\r\n        });\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.toastService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { QuestionsService } from '../../../services/questions/questions.service';\r\n\r\n@Component({\r\n  selector: 'app-question-list',\r\n  templateUrl: './question-list.component.html',\r\n  styleUrls: ['./question-list.component.scss'],\r\n})\r\nexport class QuestionListComponent implements OnInit {\r\n  questions: any;\r\n  totalQuestion: any;\r\n  page: number = 1;\r\n  pageSize: number = 5;\r\n  search: any = '';\r\n  selectedRow: any = {};\r\n  setId: any = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private actRoutes: ActivatedRoute,\r\n    private questionService: QuestionsService,\r\n    private modalService: NgbModal,\r\n    private toastService: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // console.log(\"in question list\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.actRoutes.queryParams.subscribe((params) => {\r\n      this.setId = params.id;\r\n      // console.log('set id in list', this.setId, params.id);\r\n      if (this.setId) {\r\n        this.getQuestionsOfSet(this.setId);\r\n      }\r\n    });\r\n  }\r\n\r\n  getQuestionsOfSet(id) {\r\n    this.spinner.show();\r\n    let params = {\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      search: this.search,\r\n    };\r\n    this.questionService.getSetQuestions(id, params).subscribe(\r\n      (success) => {\r\n        this.spinner.hide();\r\n        console.log('Questions', success);\r\n        this.questions = success?.result?.data;\r\n        this.totalQuestion = success?.result?.totalCount;\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.toastService.error('Something Went Wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  navigateTo(path, s_id, q_id, action) {\r\n    if (q_id) {\r\n      this.router.navigate([path], { queryParams: { s_id, q_id, action } });\r\n    } else {\r\n      this.router.navigate([path], { queryParams: { s_id, action } });\r\n    }\r\n  }\r\n\r\n  onChangePage(pageNo) {\r\n    if (pageNo > 0) {\r\n      this.page = pageNo;\r\n    }\r\n    this.getQuestionsOfSet(this.setId);\r\n  }\r\n\r\n  open(s, content) {\r\n    this.selectedRow = s;\r\n    this.modalService.open(content, { centered: true });\r\n  }\r\n\r\n  deleteQuestion(id){\r\n    this.questionService.deleteQuestionById(id).subscribe(\r\n      (success) => {\r\n        console.log(success);\r\n        this.getQuestionsOfSet(this.setId);\r\n        this.selectedRow = {};\r\n        this.modalService.dismissAll();\r\n        this.toastService.success(success.result.message);\r\n      },\r\n      (error) => {\r\n        this.selectedRow = {};\r\n        this.modalService.dismissAll();\r\n        this.toastService.error('Something went Wrong!');\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { QuestionListComponent } from './question-list/question-list.component';\r\nimport { QuestionFormComponent} from './question-form/question-form.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst questionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Questions',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'questions',\r\n      },\r\n      {\r\n        path: 'questions-list',\r\n        component: QuestionListComponent,\r\n        data: {\r\n          title: 'Questions',\r\n        },\r\n      },\r\n      {\r\n        path: 'questions-form',\r\n        component: QuestionFormComponent,\r\n        data: {\r\n          title: 'Questions Form',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(questionRoutes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class QuestionRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { QuestionRoutingModule } from './question-routing.module';\r\nimport { QuestionListComponent } from './question-list/question-list.component';\r\nimport { QuestionFormComponent} from './question-form/question-form.component';\r\nimport { CoreModule } from '../../core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [QuestionListComponent, QuestionFormComponent],\r\n  imports: [QuestionRoutingModule, CoreModule.forRoot()],\r\n})\r\nexport class QuestionModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../core/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionsService {\r\n  routes: any = {\r\n    getPath: (id, params) =>\r\n      `question/questionSetQuestions/${id}?page=${params.page}&pageSize=${params.pageSize}&search=${params.search}`,\r\n    createPath: (id) => `question/${id}`,\r\n    getByIdPath: (id) => `question/${id}`,\r\n    updatePath: (id) => `question/${id}`,\r\n    deletePath: (id) => `question/${id}`,\r\n  };\r\n\r\n  constructor(private http: ApiService) {}\r\n\r\n  getSetQuestions(id, params) {\r\n    return this.http.get(this.routes.getPath(id, params));\r\n  }\r\n\r\n  createQuestion(data, id) {\r\n    return this.http.post(this.routes.createPath(id), data);\r\n  }\r\n\r\n  updateQuestion(data, id) {\r\n    return this.http.put(this.routes.updatePath(id), data);\r\n  }\r\n\r\n  getQuestionById(id) {\r\n    return this.http.get(this.routes.getByIdPath(id));\r\n  }\r\n\r\n  deleteQuestionById(id) {\r\n    return this.http.delete(this.routes.deletePath(id));\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}