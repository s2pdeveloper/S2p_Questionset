{"version":3,"file":"src_app_layout_questionSet_question-set_module_ts.85832c96e467b12b.js","mappings":"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","sources":["./src/app/layout/questionSet/question-set-form/question-set-form.component.ts","./src/app/layout/questionSet/question-set-list/question-set-list.component.ts","./src/app/layout/questionSet/question-set-routing.module.ts","./src/app/layout/questionSet/question-set.module.ts","./src/app/services/questionSet/question-set.service.ts"],"sourcesContent":["import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuestionSetService } from '@services/questionSet/question-set.service';\r\nimport { SeminarService } from '@services/seminar/seminar.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-question-set-form',\r\n  templateUrl: './question-set-form.component.html',\r\n  styleUrls: ['./question-set-form.component.scss'],\r\n})\r\nexport class QuestionSetFormComponent implements OnInit {\r\n  action: string = '';\r\n  seminars: any;\r\n  totalSeminars: number = 0;\r\n  submitted = false;\r\n  questionSetForm = this.formBuilder.group({\r\n    _id: new FormControl(null),\r\n    name: new FormControl('', [Validators.required]),\r\n    noOfQuestion: new FormControl('', [Validators.required]),\r\n    duration: new FormControl('', [Validators.required]),\r\n    passingMarks: new FormControl('', [Validators.required]),\r\n    seminarId: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private questionSetService: QuestionSetService,\r\n    private seminarService: SeminarService,\r\n    private formBuilder: FormBuilder,\r\n    private actRoutes: ActivatedRoute,\r\n    private location: Location,\r\n    private spinner: NgxSpinnerService,\r\n    private toastService: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getSeminarList();\r\n    this.actRoutes.queryParams.subscribe((params) => {\r\n      if (params.id) {\r\n        this.getSetById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  get form() {\r\n    return this.questionSetForm.controls;\r\n  }\r\n\r\n  getSeminarList() {\r\n    this.seminarService.allSeminarList().subscribe(\r\n      (success) => {\r\n        console.log(success);\r\n        this.seminars = success?.result?.data;\r\n        // console.log('this.seminars', this.seminars);\r\n\r\n        // this.totalSeminars = success?.result?.\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  getSetById(id) {\r\n    this.questionSetService.getQuestionSetById(id).subscribe((success) => {\r\n      // console.log(\"Print\" ,success);\r\n      this.questionSetForm.patchValue(success?.result[0]);\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.questionSetForm.invalid) {\r\n      this.toastService.warning('Please fill all required fields!');\r\n      return;\r\n    }\r\n    let formData = this.questionSetForm.value;\r\n    if (formData._id) {\r\n      this.update(formData);\r\n    } else {\r\n      delete formData.id;\r\n      this.create(formData);\r\n    }\r\n  }\r\n\r\n  create(formData) {\r\n    this.spinner.show();\r\n    this.questionSetService\r\n      .createQuestionSet(formData, formData.seminarId)\r\n      .subscribe(\r\n        (success) => {\r\n          this.spinner.hide();\r\n          this.toastService.success(success.message);\r\n          this.router.navigate(['questionSet/questionSet']);\r\n        },\r\n        (error) => {\r\n          this.spinner.hide();\r\n          this.toastService.error(error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  update(formData) {\r\n    this.spinner.show();\r\n    this.questionSetService.updateQuestionSet(formData, formData._id).subscribe(\r\n      (success) => {\r\n        this.submitted = false;\r\n        this.spinner.hide();\r\n        this.toastService.success(success.message);\r\n        this.router.navigate(['questionSet/questionSet']);\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.toastService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuestionSetService } from '@services/questionSet/question-set.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-question-set-list',\r\n  templateUrl: './question-set-list.component.html',\r\n  styleUrls: ['./question-set-list.component.scss'],\r\n})\r\nexport class QuestionSetListComponent implements OnInit {\r\n  selectedRow: any = {};\r\n  sets: any;\r\n  totalSets: any;\r\n  page = 1;\r\n  pageSize = 5;\r\n  search: any = '';\r\n  visibility: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private questionSetService: QuestionSetService,\r\n    private modalService: NgbModal,\r\n    private toastService: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSets();\r\n  }\r\n\r\n  getAllSets() {\r\n    this.spinner.show();\r\n    let params = {\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      search: this.search,\r\n    };\r\n    this.questionSetService.getAllQuestionSet(params).subscribe(\r\n      (success) => {\r\n        console.log('Question Sets', success);\r\n        this.sets = success?.result?.data;\r\n        this.totalSets = success?.result?.totalCount;\r\n        this.spinner.hide();\r\n        // this.sets.forEach((set) => {\r\n        //   this.visibility[set._id] = set.isVisible;\r\n        // });\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.toastService.error('Something went Wrong!');\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangePage(pageNo) {\r\n    if (pageNo > 0) {\r\n      this.page = pageNo;\r\n    }\r\n    this.getAllSets();\r\n  }\r\n\r\n  navigateTo(path, id) {\r\n    if (id) {\r\n      this.router.navigate([path], { queryParams: { id } });\r\n    } else {\r\n      this.router.navigate([path]);\r\n    }\r\n  }\r\n\r\n  switchVisibility(row) {\r\n    this.selectedRow = row;\r\n    let seminarInfo = {\r\n      seminarId: row.seminarId,\r\n    };\r\n    this.spinner.show();\r\n    this.questionSetService.changeSetVisibility(row._id, seminarInfo).subscribe(\r\n      (success) => {\r\n        // console.log('visibility', success);\r\n        this.spinner.hide();\r\n        this.toastService.success(success.result.message);\r\n\r\n        // this.sets.forEach((set) => {\r\n\r\n        // });\r\n        // row.isVisible = !row.isVisible;\r\n        this.getAllSets();\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.toastService.error('Something Went Wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  refreshList(title) {\r\n    this.search = title == 'clear' ? '' : this.search;\r\n    this.getAllSets();\r\n  }\r\n\r\n  open(s, content) {\r\n    this.selectedRow = s;\r\n    this.modalService.open(content, { centered: true });\r\n  }\r\n\r\n  deleteQuestionSet(id) {\r\n    this.questionSetService.deleteSetById(id).subscribe(\r\n      (success) => {\r\n        this.getAllSets();\r\n        this.selectedRow = {};\r\n        this.modalService.dismissAll();\r\n        this.toastService.success(success.result.message);\r\n      },\r\n      (error) => {\r\n        this.selectedRow = {};\r\n        this.modalService.dismissAll();\r\n        this.toastService.error('Something went Wrong!');\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { QuestionSetFormComponent } from './question-set-form/question-set-form.component';\r\nimport { QuestionSetListComponent } from './question-set-list/question-set-list.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst questionSetRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Question Set',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'questionSet',\r\n      },\r\n      {\r\n        path: 'questionSet',\r\n        component: QuestionSetListComponent,\r\n        data: {\r\n          title: 'Question Set List',\r\n        },\r\n      },\r\n      {\r\n        path: 'questionSet-form',\r\n        component: QuestionSetFormComponent,\r\n        data: {\r\n          title: 'Question Set Form',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(questionSetRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QuestionSetRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { QuestionSetListComponent } from './question-set-list/question-set-list.component';\r\nimport { QuestionSetFormComponent } from './question-set-form/question-set-form.component';\r\nimport { QuestionSetRoutingModule } from './question-set-routing.module';\r\nimport { CoreModule } from '../../core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [QuestionSetFormComponent, QuestionSetListComponent],\r\n  imports: [QuestionSetRoutingModule, CoreModule.forRoot()],\r\n})\r\nexport class QuestionSetModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../core/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionSetService {\r\n  routes: any = {\r\n    createPath: (id) => `questionSet/${id}`,\r\n    getPath: (params) =>\r\n      `questionSet/getAll?page=${params.page}&pageSize=${params.pageSize}&search=${params.search}`,\r\n    getByIdPath: (id) => `questionSet/${id}`,\r\n    updatePath: (id) => `questionSet/${id}`,\r\n    deletePath: (id) => `questionSet/${id}`,\r\n    visibilityPath: (id) => `questionSet/changeVisibility/${id}`\r\n  };\r\n\r\n  constructor(private http: ApiService) {}\r\n\r\n  getAllQuestionSet(params) {\r\n    return this.http.get(this.routes.getPath(params));\r\n  }\r\n\r\n  createQuestionSet(data, id) {\r\n    return this.http.post(this.routes.createPath(id), data);\r\n  }\r\n\r\n  updateQuestionSet(data, id) {\r\n    return this.http.put(this.routes.updatePath(id), data);\r\n  }\r\n\r\n  getQuestionSetById(id) {\r\n    return this.http.get(this.routes.getByIdPath(id));\r\n  }\r\n\r\n  deleteSetById(id){\r\n    return this.http.delete(this.routes.deletePath(id));\r\n  }\r\n\r\n  changeSetVisibility(id, info){\r\n    return this.http.put(this.routes.visibilityPath(id), info);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}